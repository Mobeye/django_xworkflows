# Generated by Django 3.0.4 on 2020-03-09 13:39
# flake8: noqa

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_xworkflows.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='GenericWorkflowEnabled',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', django_xworkflows.models.StateField(max_length=16, workflow=django_xworkflows.models._SerializedWorkflow(initial_state='a', name='GenericWorkflow', states=['a', 'b']))),
            ],
            options={
                'abstract': False,
            },
            bases=(django_xworkflows.models.BaseWorkflowEnabled, models.Model),
        ),
        migrations.CreateModel(
            name='MyWorkflowEnabled',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', django_xworkflows.models.StateField(max_length=16, workflow=django_xworkflows.models._SerializedWorkflow(initial_state='foo', name='MyWorkflow', states=['foo', 'bar', 'baz']))),
                ('other', models.CharField(choices=[('aaa', 'AAA'), ('bbb', 'BBB')], max_length=4)),
            ],
            options={
                'abstract': False,
            },
            bases=(django_xworkflows.models.BaseWorkflowEnabled, models.Model),
        ),
        migrations.CreateModel(
            name='SomeWorkflowEnabled',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', django_xworkflows.models.StateField(max_length=16, workflow=django_xworkflows.models._SerializedWorkflow(initial_state='a', name='SomeWorkflow', states=['a', 'b']))),
            ],
            options={
                'abstract': False,
            },
            bases=(django_xworkflows.models.BaseWorkflowEnabled, models.Model),
        ),
        migrations.CreateModel(
            name='WithTwoWorkflows',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state1', django_xworkflows.models.StateField(max_length=16, workflow=django_xworkflows.models._SerializedWorkflow(initial_state='foo', name='MyWorkflow', states=['foo', 'bar', 'baz']))),
                ('state2', django_xworkflows.models.StateField(max_length=19, workflow=django_xworkflows.models._SerializedWorkflow(initial_state='a', name='MyAltWorkflow', states=['a', 'b', 'c', 'something_very_long']))),
            ],
            options={
                'abstract': False,
            },
            bases=(django_xworkflows.models.BaseWorkflowEnabled, models.Model),
        ),
        migrations.CreateModel(
            name='SomeWorkflowLastTransitionLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transition', models.CharField(db_index=True, max_length=255, verbose_name='transition')),
                ('from_state', models.CharField(db_index=True, max_length=255, verbose_name='from state')),
                ('to_state', models.CharField(db_index=True, max_length=255, verbose_name='to state')),
                ('timestamp', models.DateTimeField(db_index=True, default=django.utils.timezone.now, verbose_name='performed at')),
                ('obj', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='djworkflows.SomeWorkflowEnabled')),
            ],
            options={
                'verbose_name': 'XWorkflow last transition log',
                'verbose_name_plural': 'XWorkflow last transition logs',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GenericWorkflowTransitionLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transition', models.CharField(db_index=True, max_length=255, verbose_name='transition')),
                ('from_state', models.CharField(db_index=True, max_length=255, verbose_name='from state')),
                ('to_state', models.CharField(db_index=True, max_length=255, verbose_name='to state')),
                ('timestamp', models.DateTimeField(db_index=True, default=django.utils.timezone.now, verbose_name='performed at')),
                ('content_id', models.PositiveIntegerField(blank=True, db_index=True, null=True, verbose_name='Content id')),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType', verbose_name='Content type')),
            ],
            options={
                'verbose_name': 'XWorkflow transition log',
                'verbose_name_plural': 'XWorkflow transition logs',
                'ordering': ('-timestamp', 'transition'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GenericWorkflowLastTransitionLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transition', models.CharField(db_index=True, max_length=255, verbose_name='transition')),
                ('from_state', models.CharField(db_index=True, max_length=255, verbose_name='from state')),
                ('to_state', models.CharField(db_index=True, max_length=255, verbose_name='to state')),
                ('timestamp', models.DateTimeField(db_index=True, default=django.utils.timezone.now, verbose_name='performed at')),
                ('content_id', models.PositiveIntegerField(blank=True, db_index=True, null=True, verbose_name='Content id')),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='last_transition_logs', to='contenttypes.ContentType', verbose_name='Content type')),
            ],
            options={
                'verbose_name': 'XWorkflow last transition log',
                'verbose_name_plural': 'XWorkflow last transition logs',
                'abstract': False,
                'unique_together': {('content_type', 'content_id')},
            },
        ),
    ]
